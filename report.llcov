/Users/felipemenezes 1/FMMobile/Projetos/UpComingMovies/UpComingMovies/AppDelegate.swift:
    1|       |//
    2|       |//  AppDelegate.swift
    3|       |//  UpComingMovies
    4|       |//
    5|       |//  Created by Felipe Menezes on 30/03/2018.
    6|       |//  Copyright © 2018 FMMobile. All rights reserved.
    7|       |//
    8|       |
    9|       |import UIKit
   10|       |import SVProgressHUD
   11|       |
   12|       |@UIApplicationMain
   13|       |class AppDelegate: UIResponder, UIApplicationDelegate {
   14|       |
   15|       |  var window: UIWindow?
   16|       |
   17|       |  func application(_ application: UIApplication, didFinishLaunchingWithOptions 
   18|      0|                   launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {
   19|      0|    
   20|      0|    appTheme()
   21|      0|    
   22|      0|    initSdks()
   23|      0|    
   24|      0|    return true
   25|      0|  }
   26|       |  
   27|      0|  func appTheme() {
   28|      0|    //theme of SVProgressHUD
   29|      0|    SVProgressHUD.setDefaultStyle(SVProgressHUDStyle.dark)
   30|      0|  }
   31|       |
   32|      0|  func applicationWillResignActive(_ application: UIApplication) {
   33|      0|  }
   34|       |
   35|      0|  func applicationDidEnterBackground(_ application: UIApplication) {
   36|      0|  }
   37|       |
   38|      0|  func applicationWillEnterForeground(_ application: UIApplication) {
   39|      0|  }
   40|       |
   41|      0|  func applicationDidBecomeActive(_ application: UIApplication) {
   42|      0|  }
   43|       |
   44|      0|  func applicationWillTerminate(_ application: UIApplication) {
   45|      0|  }
   46|       |}
   47|       |
   48|       |extension AppDelegate: SdkControlProtocol {
   49|      0|  func initSdks() {
   50|      0|    let firebase: SdkProtocol = FirebaseSdk()
   51|      0|    _ = firebase.initialization()
   52|      0|  }
   53|       |}

/Users/felipemenezes 1/FMMobile/Projetos/UpComingMovies/UpComingMovies/UpCommingList/Api/AlamofireVersion/UpComingListApiAlamo.swift:
    1|       |//
    2|       |//  UpComingListApi.swift
    3|       |//  UpComingMovies
    4|       |//
    5|       |//  Created by Felipe Menezes on 30/03/2018.
    6|       |//  Copyright © 2018 FMMobile. All rights reserved.
    7|       |//
    8|       |
    9|       |import Foundation
   10|       |import ObjectMapper
   11|       |import Alamofire
   12|       |import AlamofireObjectMapper
   13|       |
   14|       |enum ServicesEndpoints: String {
   15|       |  case upComing = "movie/upcoming"
   16|       |  case genres = "genre/movie/list"
   17|       |  case movie = "movie/"
   18|       |}
   19|       |
   20|       |class UpComingListApiAlamo {
   21|       |
   22|       |  let key = ServerConfig.key
   23|       |  let language = "en-US"
   24|       |    
   25|      0|  func requestUpComingMovies(page: Int, complete: @escaping (PaginationModelMap<MoviesModelMap>) -> Void) {
   26|      0|    let url = ServerConfig.domain+ServicesEndpoints.upComing.rawValue
   27|      0|    let parameters: [String: Any] = [
   28|      0|      "api_key": key,
   29|      0|      "language": language,
   30|      0|      "page": page
   31|      0|    ]
   32|      0|
   33|      0|    Alamofire.request(url, method: .get, parameters: parameters, headers: nil)
   34|      0|      .responseObject { (response: DataResponse<PaginationModelMap<MoviesModelMap>>) in
   35|      0|        if let responseMap = response.result.value {
   36|      0|          complete(responseMap)
   37|      0|        } else {
   38|      0|          #if DEBUG
   39|      0|            debugPrint(response)
   40|      0|          #endif
   41|      0|        } 
   42|      0|    }
   43|      0|  }
   44|       |  
   45|      0|  func requestGenres(complete: @escaping (GenreListModelMap) -> Void) {
   46|      0|    let url = ServerConfig.domain+ServicesEndpoints.genres.rawValue
   47|      0|    let parameters: [String: Any] = [
   48|      0|      "api_key": key,
   49|      0|      "language": language
   50|      0|    ]
   51|      0|    
   52|      0|    Alamofire.request(url, method: .get, parameters: parameters, headers: nil)
   53|      0|      .responseObject { (response: DataResponse<GenreListModelMap>) in
   54|      0|        if let responseMap = response.result.value {
   55|      0|          complete(responseMap)
   56|      0|        } else {
   57|      0|          #if DEBUG
   58|      0|            debugPrint(response)
   59|      0|          #endif
   60|      0|        } 
   61|      0|    }
   62|      0|  }
   63|       |
   64|      0|  func requestMovieInfo(movie: MoviesModelMap, complete: @escaping (MoviesDetailModelMap) -> Void) {
   65|      0|    let url = ServerConfig.domain + ServicesEndpoints.movie.rawValue + String(movie.idM)
   66|      0|    let parameters: [String: Any] = [
   67|      0|      "api_key": key,
   68|      0|      "language": language
   69|      0|    ]
   70|      0|    
   71|      0|    Alamofire.request(url, method: .get, parameters: parameters, headers: nil)
   72|      0|      .responseObject { (response: DataResponse<MoviesDetailModelMap>) in
   73|      0|        if let responseMap = response.result.value {
   74|      0|          complete(responseMap)
   75|      0|        } else {
   76|      0|          #if DEBUG
   77|      0|            debugPrint(response)
   78|      0|          #endif
   79|      0|        } 
   80|      0|    }
   81|      0|  }
   82|       |}

/Users/felipemenezes 1/FMMobile/Projetos/UpComingMovies/UpComingMovies/UpCommingList/Api/UpComingListApi.swift:
    1|       |//
    2|       |//  UpcomingListApi.swift
    3|       |//  UpComingMovies
    4|       |//
    5|       |//  Created by FMMobile on 02/06/2019.
    6|       |//  Copyright © 2019 FMMobile. All rights reserved.
    7|       |//
    8|       |
    9|       |import Foundation
   10|       |import UpcomingMoviesApi
   11|       |
   12|       |struct RequestResultInfo<T> { 
   13|       |  var result: T?
   14|       |  var error: Error? 
   15|       |}
   16|       |
   17|       |protocol UpComingListApiProtocol {
   18|       |  typealias RequetsResult<T> = (_ result: RequestResultInfo<T>) -> Void
   19|       |  func requestMovies(page: Int, complete: @escaping RequetsResult<PaginationModelCodable<MoviesModelCodable>>)
   20|       |  func requestGenres(complete: @escaping RequetsResult<GenreListModelCodable>)
   21|       |  func requestMoviesDetail(movie: MoviesModelCodable, complete: @escaping RequetsResult<MoviesDetailModelCodable>)
   22|       |}
   23|       |
   24|       |class UpComingListApi: UpComingListApiProtocol {
   25|       |  
   26|       |  let api = ApiRest()
   27|       |  
   28|       |  func requestMovies(page: Int, 
   29|      0|                     complete: @escaping RequetsResult<PaginationModelCodable<MoviesModelCodable>>) {
   30|      0|    
   31|      0|    let params = ["api_key": "1f54bd990f1cdfb230adb312546d765d", "page": "\(page)"]
   32|      0|    api.get(endPoint: UpcomingEndpoints.upComing.rawValue, 
   33|      0|            params: params) {(_: Bool, result: PaginationModelCodable<MoviesModelCodable>?, 
   34|      0|                              _: URLRequest?, error: NSError?) in
   35|      0|            complete(RequestResultInfo(result: result, error: error))
   36|      0|    }
   37|      0|  }
   38|       |  
   39|      0|  func requestGenres(complete: @escaping RequetsResult<GenreListModelCodable>) {
   40|      0|    let params = ["api_key": "1f54bd990f1cdfb230adb312546d765d"]
   41|      0|    api.get(endPoint: UpcomingEndpoints.genres.rawValue, 
   42|      0|            params: params) {(_: Bool, result: GenreListModelCodable?, 
   43|      0|                              _: URLRequest?, error: NSError?) in
   44|      0|              complete(RequestResultInfo(result: result, error: error))
   45|      0|    }
   46|      0|  }
   47|       |  
   48|      0|  func requestMoviesDetail(movie: MoviesModelCodable, complete: @escaping RequetsResult<MoviesDetailModelCodable>) {
   49|      0|    let params = ["api_key": "1f54bd990f1cdfb230adb312546d765d"]
   50|      0|    api.get(endPoint: UpcomingEndpoints.movie.rawValue + String(movie.idM), 
   51|      0|            params: params) {(_: Bool, result: MoviesDetailModelCodable?, 
   52|      0|                              _: URLRequest?, error: NSError?) in
   53|      0|              complete(RequestResultInfo(result: result, error: error))
   54|      0|    }
   55|      0|  }
   56|       |}

/Users/felipemenezes 1/FMMobile/Projetos/UpComingMovies/UpComingMovies/UpCommingList/Cell's/ListMoviesCellModel.swift:
    1|       |//
    2|       |//  ListMoviesCellModel.swift
    3|       |//  UpComingMovies
    4|       |//
    5|       |//  Created by Felipe Menezes on 01/04/2018.
    6|       |//  Copyright © 2018 FMMobile. All rights reserved.
    7|       |//
    8|       |
    9|       |import UIKit
   10|       |
   11|       |protocol ListMoviesCellModelProtocol {
   12|       |  var title: String  { get set }
   13|       |  var posterPath: URL? { get set }
   14|       |  var releaseDate: String? { get set }
   15|       |  var genreTitle: String { get set }
   16|       |  init(genre: GenreModelCodable, movie: MoviesModelCodable)
   17|       |}
   18|       |
   19|       |class ListMoviesCellModel: NSObject, ListMoviesCellModelProtocol {
   20|       |  var title: String = ""
   21|       |  var posterPath: URL?
   22|       |  var releaseDate: String?
   23|       |  var genreTitle: String = ""
   24|       |  
   25|     14|  required init(genre: GenreModelCodable, movie: MoviesModelCodable) {
   26|     14|    genreTitle = genre.name ?? ""
   27|     14|    title = movie.title
   28|     14|    let url = ServerConfig.imagesBaseUrl + (movie.posterPath ?? "")
   29|     14|    posterPath = URL(string: url)
   30|     14|    let formatter = DateFormatter() 
   31|     14|    if let release = movie.releaseDate {
   32|     14|      formatter.dateFormat = ServerConfig.dateFormat
   33|     14|      if let date = formatter.date(from: release) {
   34|     14|        formatter.dateFormat = "d MMM"
   35|     14|        let sDate = formatter.string(from: date)
   36|     14|        releaseDate = "Comming on " + sDate 
   37|     14|      }
   38|     14|    }
   39|     14|  }
   40|       |}

/Users/felipemenezes 1/FMMobile/Projetos/UpComingMovies/UpComingMovies/UpCommingList/Cell's/ListMoviesTableViewCell.swift:
    1|       |//
    2|       |//  ListMoviesTableViewCell.swift
    3|       |//  UpComingMovies
    4|       |//
    5|       |//  Created by Felipe Menezes on 01/04/2018.
    6|       |//  Copyright © 2018 FMMobile. All rights reserved.
    7|       |//
    8|       |
    9|       |import UIKit
   10|       |import Kingfisher
   11|       |
   12|       |class ListMoviesTableViewCell: UITableViewCell {
   13|       |  
   14|       |  public static var identifier = "ListMovieCell"
   15|       |  public static var nib = "ListMoviesCell"
   16|       |  
   17|       |  @IBOutlet weak var posterImageView: UIImageView!
   18|       |  @IBOutlet weak var titleLabel: UILabel!
   19|       |  @IBOutlet weak var genreLabel: UILabel!
   20|       |  @IBOutlet weak var releaseLabel: UILabel!
   21|       |    
   22|      0|  override func awakeFromNib() {
   23|      0|    super.awakeFromNib()
   24|      0|  }
   25|       |  
   26|      0|  func drawCell(cellModel: ListMoviesCellModel) {
   27|      0|    titleLabel.text = cellModel.title
   28|      0|    genreLabel.text = cellModel.genreTitle
   29|      0|    releaseLabel.text = cellModel.releaseDate
   30|      0|    posterImageView.kf.setImage(with: cellModel.posterPath)
   31|      0|  }
   32|       |  
   33|      0|  override func setSelected(_ selected: Bool, animated: Bool) {
   34|      0|    super.setSelected(selected, animated: animated)
   35|      0|    
   36|      0|    // Configure the view for the selected state
   37|      0|  }
   38|       |  
   39|       |}

/Users/felipemenezes 1/FMMobile/Projetos/UpComingMovies/UpComingMovies/UpCommingList/Detail/DetailUpComingListTableViewController.swift:
    1|       |//
    2|       |//  DetailUpComingListTableViewController.swift
    3|       |//  UpComingMovies
    4|       |//
    5|       |//  Created by Felipe Menezes on 30/03/2018.
    6|       |//  Copyright © 2018 FMMobile. All rights reserved.
    7|       |//
    8|       |
    9|       |import UIKit
   10|       |import Kingfisher
   11|       |
   12|       |class DetailUpComingListTableViewController: UITableViewController {
   13|       |  
   14|       |  static public var DetailIdentifier = "DetailMovieView"
   15|       |  
   16|       |  var viewModel: DetailUpCommingListViewModel?
   17|       |  
   18|       |  @IBOutlet weak var posterImageView: UIImageView!
   19|       |  @IBOutlet weak var overviewLabel: UILabel!
   20|       |  @IBOutlet weak var titleLabel: UILabel!
   21|       |  @IBOutlet weak var releaseLabel: UILabel!
   22|       |  @IBOutlet weak var genreLabel: UILabel!
   23|       |  
   24|      0|  override func viewDidLoad() {
   25|      0|    super.viewDidLoad()
   26|      0|    self.title = viewModel?.title
   27|      0|    overviewLabel.text = viewModel?.overview
   28|      0|    titleLabel.text = viewModel?.title
   29|      0|    releaseLabel.text = viewModel?.releaseDate
   30|      0|    genreLabel.text = viewModel?.genresString
   31|      0|    posterImageView.kf.setImage(with: viewModel?.posterPath)  
   32|      0|    
   33|      0|    tableView.rowHeight = UITableView.automaticDimension
   34|      0|    tableView.estimatedRowHeight = 44
   35|      0|  }
   36|       |  
   37|      0|  override func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
   38|      0|   return UITableView.automaticDimension
   39|      0|  }
   40|       |}

/Users/felipemenezes 1/FMMobile/Projetos/UpComingMovies/UpComingMovies/UpCommingList/Detail/DetailUpCommingListViewModel.swift:
    1|       |//
    2|       |//  DetailUpCommingListViewModel.swift
    3|       |//  UpComingMovies
    4|       |//
    5|       |//  Created by Felipe Menezes on 01/04/2018.
    6|       |//  Copyright © 2018 FMMobile. All rights reserved.
    7|       |//
    8|       |
    9|       |import UIKit
   10|       |
   11|       |protocol DetailUpCommingListViewModelProtocol {
   12|       |  var movie: MoviesDetailModelCodable { get set }
   13|       |  var title: String? { get set }
   14|       |  var posterPath: URL? { get set }
   15|       |  var overview: String? { get set }
   16|       |  var releaseDate: String? { get set }
   17|       |  var genresString: String? { get set }
   18|       |  init(movie: MoviesDetailModelCodable)
   19|       |}
   20|       |
   21|       |class DetailUpCommingListViewModel: NSObject, DetailUpCommingListViewModelProtocol {
   22|       |  var movie: MoviesDetailModelCodable
   23|       |  
   24|       |  var title: String?
   25|       |  var posterPath: URL?
   26|       |  var overview: String?
   27|       |  var releaseDate: String?
   28|       |  var genresString: String?
   29|       |  
   30|      1|  required init(movie: MoviesDetailModelCodable) {
   31|      1|    self.movie = movie
   32|      1|    title = movie.title
   33|      1|    overview = movie.overview
   34|      1|    let url = ServerConfig.imagesBaseUrl + movie.posterPath
   35|      1|    posterPath = URL(string: url)
   36|      1|    let formatter = DateFormatter() 
   37|      1|    if let release = movie.releaseDate {
   38|      1|      formatter.dateFormat = ServerConfig.dateFormat
   39|      1|      if let date = formatter.date(from: release) {
   40|      1|        formatter.dateFormat = "d MMM"
   41|      1|        let sDate = formatter.string(from: date)
   42|      1|        releaseDate = "Comming on " + sDate 
   43|      1|      }
   44|      1|    }
   45|      1|    let array = movie.genres?.map { $0.name ?? "" }
   46|      1|    genresString = array?.joined(separator: ", ")
   47|      1|  }
   48|       |}

/Users/felipemenezes 1/FMMobile/Projetos/UpComingMovies/UpComingMovies/UpCommingList/Model/GenreModelCodable.swift:
    1|       |//
    2|       |//  GenreModelMap.swift
    3|       |//  UpComingMovies
    4|       |//
    5|       |//  Created by FMMobile on 02/06/2019.
    6|       |//  Copyright © 2019 FMMobile. All rights reserved.
    7|       |//
    8|       |
    9|       |import Foundation
   10|       |
   11|       |/// Genre Mapping Object
   12|       |public class GenreListModelCodable: Decodable {
   13|       |  var genres: [GenreModelCodable]?
   14|       | 
   15|       |  //we need to choice a better place for this 
   16|      0|  public func genresForMovie(movie: MoviesModelCodable) -> [GenreModelCodable]? {
   17|      0|    return genres?.filter { 
   18|      0|        return movie.genreIds.contains($0.idGenre)
   19|      0|    }
   20|      0|  }
   21|       |}
   22|       |
   23|       |public class GenreModelCodable: Decodable {
   24|       |  var idGenre: Int
   25|       |  var name: String?
   26|       |  
   27|       |  enum CodingKeys: String, CodingKey {
   28|       |    case idGenre = "id"
   29|       |    case name
   30|       |  }
   31|       |}

/Users/felipemenezes 1/FMMobile/Projetos/UpComingMovies/UpComingMovies/UpCommingList/Model/Maps/GenreModelMap.swift:
    1|       |//
    2|       |//  GenreModelMap.swift
    3|       |//  UpComingMovies
    4|       |//
    5|       |//  Created by Felipe Menezes on 30/03/2018.
    6|       |//  Copyright © 2018 FMMobile. All rights reserved.
    7|       |//
    8|       |
    9|       |import Foundation
   10|       |import ObjectMapper
   11|       |
   12|       |/// Genre Mapping Object
   13|       |public class GenreListModelMap: Mappable {
   14|       |  var genres: [GenreModelMap]?
   15|       |  
   16|      0|  required public init?(map: Map) {
   17|      0|  }
   18|       |  
   19|      0|  public func mapping(map: Map) {
   20|      0|    genres <- map["genres"]
   21|      0|  }
   22|       |  
   23|       |}
   24|       |
   25|       |public class GenreModelMap: Mappable {
   26|       |  var idGenre: Int = 0
   27|       |  var name: String?
   28|       |  
   29|      0|  required public init?(map: Map) {
   30|      0|  }
   31|       |  
   32|      0|  public  func mapping(map: Map) {
   33|      0|    idGenre <- map["id"]
   34|      0|    name <- map["name"]
   35|      0|  }
   36|       |}

/Users/felipemenezes 1/FMMobile/Projetos/UpComingMovies/UpComingMovies/UpCommingList/Model/Maps/MoviesDetailModelMap.swift:
    1|       |//
    2|       |//  MoviesDetailModelMap.swift
    3|       |//  UpComingMovies
    4|       |//
    5|       |//  Created by Felipe Menezes on 30/03/2018.
    6|       |//  Copyright © 2018 FMMobile. All rights reserved.
    7|       |//
    8|       |
    9|       |import Foundation
   10|       |import ObjectMapper
   11|       |
   12|       |/// Mapping Object
   13|       |public class MoviesDetailModelMap: Mappable {
   14|       |  var adult: Bool = false 
   15|       |  var backDropPath: String = ""
   16|       |  var belongsToCollection: String?
   17|       |  var budget: Int = 0
   18|       |  var genres: [GenreModelMap]?
   19|       |  var homepage: String?
   20|       |  var idM: Int = 0
   21|       |  var imdbId: String = ""
   22|       |  var originalLanguage: String = "" 
   23|       |  var originalTitle: String = ""
   24|       |  var overview: String = ""
   25|       |  var popularity: Double = 0.0 
   26|       |  var posterPath: String = "" 
   27|       |  var productionCompanies: [[String: Any]]?
   28|       |  var releaseDate: String?
   29|       |  var revenue: Int = 0
   30|       |  var runtime: Int = 0
   31|       |  var spokenLanguages: [[String: Any]]?
   32|       |  var status: String = ""
   33|       |  var tagline: String = ""
   34|       |  var title: String = ""
   35|       |  var video: Bool = false
   36|       |  var voteAverage: Int = 0
   37|       |  var voteCount: Int = 0
   38|       |   
   39|      0|  required public init?(map: Map) {
   40|      0|  }
   41|       |  
   42|      0|  public func mapping(map: Map) {
   43|      0|    adult <- map["adult"]
   44|      0|    backDropPath <- map["backdrop_path"]
   45|      0|    budget <- map["budget"]
   46|      0|    belongsToCollection <- map["belongs_to_collection"]
   47|      0|    genres <- map["genres"]
   48|      0|    idM <- map["id"]
   49|      0|    imdbId <- map["imdb_id"]
   50|      0|    originalLanguage <- map["original_language"]
   51|      0|    originalTitle <- map["original_title"]
   52|      0|    overview <- map["overview"]
   53|      0|    popularity <- map["popularity"]
   54|      0|    posterPath <- map["poster_path"]
   55|      0|    productionCompanies <- map["production_companies"]
   56|      0|    releaseDate <- map["release_date"]
   57|      0|    revenue <- map["revenue"]
   58|      0|    releaseDate <- map["release_date"]
   59|      0|    runtime <- map["runtime"]
   60|      0|    spokenLanguages <- map["spoken_languages"]
   61|      0|    status <- map["status"]
   62|      0|    tagline <- map["tagline"]
   63|      0|    title <- map["title"]
   64|      0|    video <- map["video"]
   65|      0|    voteAverage <- map["vote_average"]
   66|      0|    voteCount <- map["vote_count"]
   67|      0|    
   68|      0|  }
   69|       |}

/Users/felipemenezes 1/FMMobile/Projetos/UpComingMovies/UpComingMovies/UpCommingList/Model/Maps/MoviesModelMap.swift:
    1|       |//
    2|       |//  MoviesModelMap.swift
    3|       |//  UpComingMovies
    4|       |//
    5|       |//  Created by Felipe Menezes on 30/03/2018.
    6|       |//  Copyright © 2018 FMMobile. All rights reserved.
    7|       |//
    8|       |
    9|       |import Foundation
   10|       |import ObjectMapper
   11|       |
   12|       |/// Mapping Object
   13|       |public class MoviesModelMap: Mappable {
   14|       |  var voteCount: Int = 0
   15|       |  var idM: Int = 0
   16|       |  var video: Bool = false
   17|       |  var voteAverage: Double = 0.0
   18|       |  var title: String = ""
   19|       |  var popularity: Double = 0.0
   20|       |  var posterPath: String?
   21|       |  var originalLanguage: String?
   22|       |  var originalTitle: String?
   23|       |  var genreIds: [Int] = []
   24|       |  var backdropPath: String?
   25|       |  var adult: Bool = false 
   26|       |  var overview: String? 
   27|       |  var releaseDate: String?
   28|       |  
   29|      0|  required public init?(map: Map) {
   30|      0|  }
   31|       |  
   32|      0|  public func mapping(map: Map) {
   33|      0|    voteCount <- map["vote_count"]
   34|      0|    idM <- map["id"]
   35|      0|    video <- map["video"]
   36|      0|    voteAverage <- map["voteAverage"]
   37|      0|    title <- map["title"]
   38|      0|    popularity <- map["popularity"]
   39|      0|    posterPath <- map["poster_path"]
   40|      0|    originalLanguage <- map["original_language"]
   41|      0|    originalTitle <- map["original_title"]
   42|      0|    genreIds <- map["genre_ids"]
   43|      0|    backdropPath <- map["backdrop_path"]
   44|      0|    adult <- map["adult"]
   45|      0|    overview <- map["overview"]
   46|      0|    releaseDate <- map["release_date"]
   47|      0|    
   48|      0|  }
   49|       |}

/Users/felipemenezes 1/FMMobile/Projetos/UpComingMovies/UpComingMovies/UpCommingList/Model/Maps/PaginationModelMap.swift:
    1|       |//
    2|       |//  PaginationModelMap.swift
    3|       |//  UpComingMovies
    4|       |//
    5|       |//  Created by Felipe Menezes on 30/03/2018.
    6|       |//  Copyright © 2018 FMMobile. All rights reserved.
    7|       |//
    8|       |
    9|       |import Foundation
   10|       |import ObjectMapper
   11|       |
   12|       |/// Pagination Mapping Object
   13|       |public class PaginationModelMap <T: Mappable>: StatusModelMap {
   14|       |  var results: [T]?
   15|       |  var page: Int = 0
   16|       |  var totalResults: Int = 0
   17|       |  var dates: [String: String]?
   18|       |  var totalPages: Int = 0
   19|       |  
   20|      0|  public override func mapping(map: Map) {
   21|      0|    super.mapping(map: map)
   22|      0|    results <- map["results"]
   23|      0|    page <- map["page"]
   24|      0|    totalResults <- map["total_results"]
   25|      0|    dates <- map["dates"]
   26|      0|    totalPages <- map["total_pages"]
   27|      0|  }
   28|       |}

/Users/felipemenezes 1/FMMobile/Projetos/UpComingMovies/UpComingMovies/UpCommingList/Model/Maps/StatusModelMap.swift:
    1|       |//
    2|       |//  StatusModelMap.swift
    3|       |//  UpComingMovies
    4|       |//
    5|       |//  Created by Felipe Menezes on 30/03/2018.
    6|       |//  Copyright © 2018 FMMobile. All rights reserved.
    7|       |//
    8|       |
    9|       |import Foundation
   10|       |import ObjectMapper
   11|       |
   12|       |/// Status Mapping Object
   13|       |public class StatusModelMap: Mappable {
   14|       |  var statusCode: Int = 0
   15|       |  var statusMessage: String?
   16|       |  var success: Bool = false
   17|       |  
   18|      0|  required public init?(map: Map) {
   19|      0|  }
   20|       |  
   21|      0|  public func mapping(map: Map) {
   22|      0|    statusCode <- map["status_code"]
   23|      0|    statusMessage <- map["status_message"]
   24|      0|    success <- map["success"]
   25|      0|  }
   26|       |}

/Users/felipemenezes 1/FMMobile/Projetos/UpComingMovies/UpComingMovies/UpCommingList/Model/PaginationModelCodable.swift:
    1|       |//
    2|       |//  PaginationModelCodable.swift
    3|       |//  UpComingMovies
    4|       |//
    5|       |//  Created by FMMobile on 02/06/2019.
    6|       |//  Copyright © 2019 FMMobile. All rights reserved.
    7|       |//
    8|       |
    9|       |import Foundation
   10|       |
   11|       |/// PaginationModelCodable
   12|       |public class PaginationModelCodable<T>: StatusErrorModelCodable where T: Decodable {
   13|       |  var results: [T]?
   14|       |  var page: Int
   15|       |  var totalResults: Int
   16|       |  var dates: DatesCodable?
   17|       |  var totalPages: Int
   18|       |  
   19|       |  private enum CodingKeys: String, CodingKey {
   20|       |    case results
   21|       |    case page
   22|       |    case totalResults = "total_results"
   23|       |    case dates
   24|       |    case totalPages = "total_pages"
   25|       |  }
   26|       |  
   27|     11|  public required init(from decoder: Decoder) throws {
   28|     11|    let map = try decoder.container(keyedBy: CodingKeys.self)
   29|     11|    do { self.results = try  map.decode([T].self, forKey: .results) } 
   30|     11|    catch let error { print(error) } 
   31|     11|    self.page = try map.decode(Int.self, forKey: .page)
   32|     11|    self.totalResults = try map.decode(Int.self, forKey: .totalResults)
   33|     11|    self.dates = try? map.decode(DatesCodable.self, forKey: .dates)
   34|     11|    self.totalPages = try map.decode(Int.self, forKey: .totalPages)
   35|     11|    try super.init(from: decoder)
   36|     11|  }
   37|       |}
   38|       |
   39|       |public class DatesCodable: Decodable { 
   40|       |  var maximum: String
   41|       |  var minimum: String
   42|       |}

/Users/felipemenezes 1/FMMobile/Projetos/UpComingMovies/UpComingMovies/UpCommingList/View/UpComingListRXTableViewController.swift:
    1|       |//
    2|       |//  UpComingListRXTableViewController.swift
    3|       |//  UpComingMovies
    4|       |//
    5|       |//  Created by FMMobile on 11/06/2019.
    6|       |//  Copyright © 2019 FMMobile. All rights reserved.
    7|       |//
    8|       |
    9|       |import Foundation
   10|       |import SVProgressHUD
   11|       |import UIKit
   12|       |import RxSwift
   13|       |import RxCocoa
   14|       |
   15|       |class UpComingListRXTableViewController: UIViewController, UITableViewDelegate {
   16|       |  
   17|       |  @IBOutlet weak var tableView: UITableView!
   18|       |  
   19|       |  var disposeBag = DisposeBag()
   20|       |  
   21|      0|  lazy var coordinator = { UpCommingCoordinator(controller: self) }()
   22|       |  
   23|       |  let viewModel = UpComingListViewModelRX()
   24|       |
   25|      0|  override func viewDidLoad() {
   26|      0|    super.viewDidLoad()
   27|      0|    
   28|      0|    title = viewModel.title
   29|      0|    
   30|      0|    tableView.register(UINib(nibName: ListMoviesTableViewCell.nib, bundle: nil), 
   31|      0|                       forCellReuseIdentifier: ListMoviesTableViewCell.identifier)
   32|      0|    
   33|      0|    tableView.rowHeight = UITableView.automaticDimension
   34|      0|    tableView.estimatedRowHeight = 44
   35|      0|    
   36|      0|    viewModel.moviesSubject
   37|      0|      .bind(to: tableView.rx.items(cellIdentifier: ListMoviesTableViewCell.identifier, 
   38|      0|                                   cellType: ListMoviesTableViewCell.self)) { (_, element, cell) in
   39|      0|          let genres = self.viewModel.genreList?.genresForMovie(movie: element)
   40|      0|          if let genre = genres?.first {
   41|      0|            let cellModel = ListMoviesCellModel(genre: genre, movie: element)
   42|      0|            cell.drawCell(cellModel: cellModel)
   43|      0|          }
   44|      0|      }
   45|      0|      .disposed(by: disposeBag)
   46|      0|        
   47|      0|    tableView.rx
   48|      0|      .modelSelected(MoviesModelCodable.self)
   49|      0|      .subscribe(onNext: { value in
   50|      0|        SVProgressHUD.show()
   51|      0|        self.viewModel.getMovieInfo(movie: value, complete: { [weak self] in
   52|      0|          SVProgressHUD.dismiss()
   53|      0|          if let movieInfo = self?.viewModel.detailMovie {
   54|      0|            _ = self?.coordinator.instantiateDetailSegue(detailMovie: movieInfo)
   55|      0|          }
   56|      0|        })
   57|      0|      })
   58|      0|      .disposed(by: disposeBag)
   59|      0|    
   60|      0|    SVProgressHUD.show()
   61|      0|    viewModel.getGenres { [weak self] in
   62|      0|      self?.viewModel.getUpCommingMovies {
   63|      0|        SVProgressHUD.dismiss()
   64|      0|      }
   65|      0|    }
   66|      0|  }
   67|       |  
   68|       |}

/Users/felipemenezes 1/FMMobile/Projetos/UpComingMovies/UpComingMovies/UpCommingList/View/UpComingListTableViewController.swift:
    1|       |//
    2|       |//  UpComingListTableViewController.swift
    3|       |//  UpComingMovies
    4|       |//
    5|       |//  Created by Felipe Menezes on 30/03/2018.
    6|       |//  Copyright © 2018 FMMobile. All rights reserved.
    7|       |//
    8|       |
    9|       |import UIKit
   10|       |import SVProgressHUD
   11|       |
   12|       |class UpComingListTableViewController: UITableViewController {
   13|       |  
   14|      0|  lazy var coordinator = { UpCommingCoordinator(controller: self) }()
   15|       |  
   16|       |  let viewModel = UpComingListViewModel()
   17|       |  
   18|      0|  override func viewDidLoad() {
   19|      0|    super.viewDidLoad()
   20|      0|    refreshControl?.addTarget(self, action: #selector(self.refresh), for: UIControl.Event.valueChanged)
   21|      0|    
   22|      0|    title = viewModel.title
   23|      0|    
   24|      0|    //Handle Pagination
   25|      0|    self.tableView.addInfiniteScroll { [weak self] (tableView) -> Void in
   26|      0|      self?.viewModel.forwardPage()
   27|      0|      self?.loadingContent()
   28|      0|      self?.tableView.finishInfiniteScroll()
   29|      0|    }
   30|      0|    
   31|      0|    tableView.register(UINib(nibName: ListMoviesTableViewCell.nib, bundle: nil), 
   32|      0|                       forCellReuseIdentifier: ListMoviesTableViewCell.identifier)
   33|      0|    
   34|      0|    tableView.rowHeight = UITableView.automaticDimension
   35|      0|    tableView.estimatedRowHeight = 44
   36|      0|    start()
   37|      0|  }
   38|       |  
   39|      0|  func start() {
   40|      0|    SVProgressHUD.show()
   41|      0|    viewModel.resetPage()
   42|      0|
   43|      0|    viewModel.getGenres { [weak self] in
   44|      0|      self?.loadingContent()
   45|      0|      DispatchQueue.main.async { self?.refreshControl?.endRefreshing() }
   46|      0|    }
   47|      0|  }
   48|       |  
   49|      0|  func loadingContent() { 
   50|      0|    viewModel.getUpCommingMovies { [weak self] in 
   51|      0|      SVProgressHUD.dismiss()
   52|      0|      DispatchQueue.main.async { self?.tableView.reloadData() }
   53|      0|    }
   54|      0|  }
   55|       |  
   56|      0|  @objc func refresh() {
   57|      0|    start()
   58|      0|  }
   59|       |  
   60|       |  // MARK: - Table view data source
   61|       |  
   62|      0|  override func numberOfSections(in tableView: UITableView) -> Int {
   63|      0|    return self.viewModel.numberOfSections()
   64|      0|  }
   65|       |  
   66|      0|  override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
   67|      0|    return self.viewModel.numRowsSection(section: section)
   68|      0|  }
   69|       |  
   70|      0|  override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
   71|      0|    if let cell = tableView.dequeueReusableCell(withIdentifier: ListMoviesTableViewCell.identifier) 
   72|      0|      as? ListMoviesTableViewCell {
   73|      0|      if let movie = viewModel.valueForCellPosition(indexPath: indexPath) {
   74|      0|        let genres = viewModel.genreList?.genresForMovie(movie: movie)
   75|      0|        if let genre = genres?.first {
   76|      0|          let cellModel = ListMoviesCellModel(genre: genre, movie: movie)
   77|      0|          cell.drawCell(cellModel: cellModel)
   78|      0|        }
   79|      0|      }
   80|      0|      return cell
   81|      0|    }
   82|      0|    return UITableViewCell()
   83|      0|  }
   84|       |  
   85|      0|  override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
   86|      0|    tableView.deselectRow(at: indexPath, animated: true)
   87|      0|    if let movie = viewModel.valueForCellPosition(indexPath: indexPath) {
   88|      0|      instantiateDetailSegue(movie: movie)
   89|      0|    }
   90|      0|  }
   91|       |  
   92|      0|  public func instantiateDetailSegue(movie: MoviesModelCodable) {
   93|      0|    SVProgressHUD.show()
   94|      0|    viewModel.getMovieInfo(movie: movie, complete: { [weak self] in
   95|      0|      SVProgressHUD.dismiss()
   96|      0|      if let movieInfo = self?.viewModel.detailMovie {
   97|      0|        _ = self?.coordinator.instantiateDetailSegue(detailMovie: movieInfo)
   98|      0|      }
   99|      0|    })
  100|      0|  }
  101|       |}

/Users/felipemenezes 1/FMMobile/Projetos/UpComingMovies/UpComingMovies/UpCommingList/View/UpCommingCoordinator.swift:
    1|       |//
    2|       |//  UpCommingCoordinator.swift
    3|       |//  UpComingMovies
    4|       |//
    5|       |//  Created by FMMobile on 11/06/2019.
    6|       |//  Copyright © 2019 FMMobile. All rights reserved.
    7|       |//
    8|       |
    9|       |import Foundation
   10|       |import SVProgressHUD
   11|       |
   12|       |protocol UpCommingCoordinatorProtocol {
   13|       |  var parentController: UIViewController { get set }
   14|       |  init(controller: UIViewController)
   15|       |  func instantiateDetailSegue(detailMovie: MoviesDetailModelCodable) -> Bool
   16|       |  
   17|       |}
   18|       |
   19|       |class UpCommingCoordinator: UpCommingCoordinatorProtocol {
   20|       |  
   21|       |  var parentController: UIViewController
   22|       |  
   23|      2|  required init(controller: UIViewController) {
   24|      2|    self.parentController = controller
   25|      2|  }
   26|       |  
   27|      0|  func instantiateDetailSegue(detailMovie: MoviesDetailModelCodable) -> Bool {
   28|      0|    if let detailController = self.parentController.storyboard?.instantiateViewController (
   29|      0|      withIdentifier: DetailUpComingListTableViewController.DetailIdentifier)  
   30|      0|      as? DetailUpComingListTableViewController {
   31|      0|      detailController.viewModel = DetailUpCommingListViewModel(movie: detailMovie)
   32|      0|      DispatchQueue.main.async {
   33|      0|        self.parentController.navigationController?.pushViewController(detailController, animated: true)
   34|      0|      }
   35|      0|      return true
   36|      0|    }
   37|      0|    return false
   38|      0|  }
   39|       |}

/Users/felipemenezes 1/FMMobile/Projetos/UpComingMovies/UpComingMovies/UpCommingList/ViewModel/UpComingListViewModel.swift:
    1|       |//
    2|       |//  UpComingListViewModel.swift
    3|       |//  UpComingMovies
    4|       |//
    5|       |//  Created by Felipe Menezes on 30/03/2018.
    6|       |//  Copyright © 2019 FMMobile. All rights reserved.
    7|       |//
    8|       |//  SOLID: Single Responsibility Principle, Interface Segregation
    9|       |//
   10|       |
   11|       |import Foundation
   12|       |
   13|       |protocol UpcomingApiProtocol { 
   14|       |  var api: UpComingListApi { get }
   15|       |}
   16|       |
   17|       |protocol ViewBasicInfoProtocol { 
   18|       |  var title: String { get }
   19|       |}
   20|       |
   21|       |protocol UpComingListViewModelProtocol: UpcomingApiProtocol {
   22|       |  func getMovieInfo(movie: MoviesModelCodable, complete: @escaping () -> Void)
   23|       |  func getGenres(complete: @escaping () -> Void)
   24|       |  func getUpCommingMovies(complete: @escaping () -> Void)
   25|       |  func resetPage() 
   26|       |  func forwardPage()
   27|       |}
   28|       |
   29|       |class UpComingListViewModel: UpComingListViewModelProtocol { 
   30|       |  
   31|       |  var api = UpComingListApi()
   32|       |  
   33|       |  var currentPage = 1
   34|       |  var maxPages = 1
   35|       |  
   36|       |  var genreList: GenreListModelCodable?
   37|       |  
   38|       |  var movies = [MoviesModelCodable]()
   39|       |  var detailMovie: MoviesDetailModelCodable?
   40|       |  
   41|       |  ///getMovieInfo
   42|      0|  func getMovieInfo(movie: MoviesModelCodable, complete: @escaping () -> Void) {
   43|      0|    api.requestMoviesDetail(movie: movie) { [weak self] resultInfo in
   44|      0|      self?.detailMovie = resultInfo.result
   45|      0|      complete()
   46|      0|    }
   47|      0|  }
   48|       |  
   49|       |  ///getGenres
   50|      0|  func getGenres(complete: @escaping () -> Void) {
   51|      0|    api.requestGenres { [weak self] resultInfo in
   52|      0|      self?.genreList = resultInfo.result
   53|      0|      complete()
   54|      0|    }
   55|      0|  }
   56|       |  
   57|       |  ///getUpCommingMovies
   58|      0|  func getUpCommingMovies(complete: @escaping () -> Void) {
   59|      0|    api.requestMovies(page: currentPage) { [weak self] resultInfo in
   60|      0|      if let totalPages = resultInfo.result?.totalPages {
   61|      0|        self?.maxPages = totalPages
   62|      0|      }
   63|      0|      if let results = resultInfo.result?.results {
   64|      0|        self?.movies += results
   65|      0|      }
   66|      0|      complete()
   67|      0|    }
   68|      0|  }
   69|       |  
   70|      0|  public func resetPage() {
   71|      0|    self.currentPage = 1
   72|      0|    movies.removeAll()
   73|      0|  }
   74|       |  
   75|      0|  public func forwardPage() {
   76|      0|    if self.currentPage < maxPages {
   77|      0|      currentPage += 1
   78|      0|    }
   79|      0|  }
   80|       |}
   81|       |
   82|       |extension UpComingListViewModel: UpComingTableViewsDataSetProtocol {
   83|      0|  func numberOfSections() -> Int {
   84|      0|    return 1
   85|      0|  }
   86|       |  
   87|      0|  func numRowsSection(section: Int) -> Int {
   88|      0|    return movies.count  
   89|      0|  }
   90|       |  
   91|      0|  func valueForCellPosition(indexPath: IndexPath) -> MoviesModelCodable? {
   92|      0|    return movies[indexPath.row]
   93|      0|  }
   94|       |}
   95|       |
   96|       |extension UpComingListViewModel: ViewBasicInfoProtocol {
   97|       |  var title: String {
   98|      0|    get {
   99|      0|      return "Upcoming Movies"
  100|      0|    }
  101|       |  }
  102|       |}

/Users/felipemenezes 1/FMMobile/Projetos/UpComingMovies/UpComingMovies/UpCommingList/ViewModel/UpComingListViewModelRX.swift:
    1|       |//
    2|       |//  UpComingListViewModel.swift
    3|       |//  UpComingMovies
    4|       |//
    5|       |//  Created by Felipe Menezes on 30/03/2018.
    6|       |//  Copyright © 2019 FMMobile. All rights reserved.
    7|       |//
    8|       |//  SOLID: Single Responsibility Principle, Interface Segregation
    9|       |//
   10|       |
   11|       |import Foundation
   12|       |import UIKit
   13|       |import RxSwift
   14|       |import RxCocoa
   15|       |
   16|       |protocol UpComingListViewModelRXProtocol {
   17|       |  var moviesSubject: PublishSubject<[MoviesModelCodable]> { get set }
   18|       |}
   19|       |
   20|       |class UpComingListViewModelRX: UpComingListViewModel, UpComingListViewModelRXProtocol {
   21|       |  var moviesSubject = PublishSubject<[MoviesModelCodable]>()
   22|       |  
   23|      0|  override func getUpCommingMovies(complete: @escaping () -> Void) {
   24|      0|    super.getUpCommingMovies {
   25|      0|      self.moviesSubject.onNext(self.movies)
   26|      0|      complete()
   27|      0|    }
   28|      0|  }
   29|       |}
